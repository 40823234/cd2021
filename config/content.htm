<h1>About</h1>
<p>Stage1-bg2:<a href="https://40823234.github.io/stage1-bg2/content/index.html">https://40823234.github.io/stage1-bg2/content/index.html</a></p>
<p><span>Stage2-bg2:<a href="https://40823234.github.io/stage2-bg2/content/index.html">https://40823234.github.io/stage2-bg2/content/index.html</a></span></p>
<p><span>Stage3-bg1:<a href="https://40823234.github.io/stage3-bg1/content/index.html">https://40823234.github.io/stage3-bg1/content/index.html</a></span></p>
<p><span></span></p><h1>work</h1>
<h2>w1</h2>
<p>Blog</p>
<p>LEO是存在Config裡<br/>內容是在Markdown<br/>轉html 後是在blog裡<br/>Ctrl i加新節點<br/>Ctrl r往右<br/>Ctrl l往左<br/>Ctrl u往上<br/>Ctrl d往下<br/>@path是設定路徑<br/>@edit 編輯它只能一層<br/>@clean可以多層<br/>@others可以多層管理</p>
<p>更改使用者和名稱</p>
<p><img alt="" height="300" src="/images/1614751056956_new.jpg" width="560"/></p>
<p>local-blog複製指令檢查slug有無相同</p>
<p><img alt="" height="300" src="/images/1614751056956_new_0.jpg" width="588"/></p>
<p>更改為網站網址</p>
<p><img alt="" height="300" src="/images/1614751254448_new.jpg" width="607"/></p>
<h2>w2 零件繪製</h2>
<p>零件檔下載</p>
<p><a href="/downloads/手臂右.STL">右夾爪.STL</a>     <a href="/downloads/手臂左.STL">左夾爪.STL</a>      <a href="/downloads/手臂連桿右.STL">夾爪連桿右.STL</a>    <a href="/downloads/手臂連桿左.STL">夾爪連桿左.STL</a>     <a href="/downloads/軌道2.STL">縱向軌道.STL</a></p>
<p><a href="/downloads/軌道1.STL">橫向軌道.STL</a>    <a href="/downloads/本體.STL">本體.STL</a>       <a href="/downloads/偏心圓.STL">偏心圓.STL</a>       <a href="/downloads/粗連桿.STL">夾爪連接桿.STL</a>      <a href="/downloads/細連桿.STL">連桿.STL</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/jkpg-IC5KEA" width="560"></iframe></p>
<p></p>
<h2>w3 CoppeliaSim 模擬</h2>
<p></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/C4DJ98DyYWs" width="560"></iframe></p>
<p></p>
<p>模擬教學</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/G40mqfznJgE" width="560"></iframe> </p>
<p></p>
<p>1.點選file&gt;Import&gt;Mesh選取零件&gt; Up-vector可選取零件擺放之座標&gt;ResizableFloor_5_25點兩下可以調整地板大小</p>
<p><img alt="" height="322" src="/images/O9MdB2BOlH.gif" width="600"/></p>
<p>2.畫面點右鍵畫面點右鍵&gt;Add&gt;Joint可選擇要加Revolute(旋轉軸)或Prismatic(矩形軸)</p>
<p><img alt="" height="323" src="/images/3H4JZcnh6t.gif" width="600"/></p>
<p>3.將自己零件造作動方式排列順序&gt;旋轉軸點兩下視窗Show dynamic properties鈕點下去勾選Motor enabled可以啟動馬達&gt;零件點選兩下點視窗<span>Show dynamic properties鈕&gt;會移動的零件都要點Body is dynamic&gt;Body is respondable</span>指是否實體化 ,若兩個實體化物件互相碰撞 ,會依照物理設定做相對反應。</p>
<p><img alt="" height="321" src="/images/bn51zM2MAr.gif" width="600"/></p>
<p></p>
<h2>w4</h2>
<p>w4內容介紹</p>
<p>檔案下載:<a href="/downloads/stage1-bg2.zip">stage1-bg2.zip</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="230" src="//www.youtube.com/embed/DiyMs_tgjbc" width="500"></iframe></p>
<h1>問題與解決方法</h1>
<p>第一次設計:</p>
<p><img alt="" height="342" src="/images/2.jpg" width="500"/></p>
<p>經過討論後決的第一次設計出的夾爪只能抓取前方固定範圍距離的物品靈活度太低</p>
<p></p>
<p>第二次設計改良:</p>
<p><img alt="" height="279" src="/images/1.jpg" width="500"/></p>
<p></p>
<p>討論後決定增加橫向軌道與縱向軌道來增加可抓取範圍以增加靈活度增加可抓取範圍</p>
<p></p>
<p>第三次設計改良:</p>
<p><img alt="" height="203" src="/images/3.17.jpg" width="500"/></p>
<p></p>
<p>加入軌道後發現橫向軌道有傾斜問題導致夾抓無法移動到指定位置</p>
<p></p>
<p>第四次設計改良:</p>
<p><img alt="" height="365" src="/images/317.jpg" width="500"/></p>
<p></p>
<p>為解決橫向傾斜問題我們增加了縱向軌道的寬度來支撐</p>
<p></p>
<h1>W5</h1>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/6GqY9SyR9gw" title="YouTube video player" width="560"></iframe></p>
<p><iframe height="600" src="https://docs.google.com/spreadsheets/d/e/2PACX-1vSAXhr5m_-UiBaFnZ0uONCdMTIti5_7LpCyIJTYp27TOTUQt0upLJuJGH5tw8pT4a-iZgRGdU7z17Ud/pubhtml?gid=0&amp;single=true&amp;widget=true&amp;headers=false" width="400"></iframe></p>
<h1>Stage2</h1>
<p>零件下載</p>
<p><a href="/downloads/組合.zip">組合.zip</a></p>
<p><a href="/downloads/容器.zip">容器.zip</a></p>
<p><a href="/downloads/凸輪.zip">凸輪.zip</a></p>
<p><a href="/downloads/主體.zip">主體.zip</a></p>
<p><a href="/downloads/支架.zip">支架.zip</a></p>
<p></p>
<p></p>
<h2>W7第一次模擬</h2>
<p>檔案下載:<a href="/downloads/V-rep1.zip">V-rep1.zip</a></p>
<p><span>中心桿上的弧線太陡峭導致桿子上的球體卡住</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/Qs_aJNafFXQ" width="500"></iframe></p>
<p></p>
<h2>W8第二次模擬</h2>
<p><span>檔案下載:<a href="/downloads/V-rep2.zip">V-rep2.zip</a></span></p>
<p><span>這次將第一次的弧線改得更平緩但中心桿沒辦法約束到桿件</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/Ek2iuTPmg3w" width="500"></iframe></span></p>
<h2>W9第三次模擬</h2>
<p><span>檔案下載:<a href="/downloads/V-rep3.zip">V-rep3.zip</a></span></p>
<p><span>中心軸用了圓柱凸輪來約束桿件但運轉還是不順暢</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/XgOSriiNNqY" width="500"></iframe></span></p>
<h1>stage3</h1>
<h2>task1</h2>
<p>指導人員:40823245   教學連結:<a href="https://40823245.github.io/cd2021/content/task1.html">https://40823245.github.io/cd2021/content/task1.html</a></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">def stu2b(account):
    if account == "40823231":   #學號40823231變成40823231-2
        return account + "-2"
    elif account[0:3] == "407":  #學號407xxxxx變成s407xxxxx
        return "s" + account
    else:
        return account                #其他學號按照原本學號
  
teamb = []
  
# open file, default is read mode, since txt content no chinese char
# no encoding = "UTF-8" is needed
with open("stage3_2b.txt") as fh:       #開啟檔案
    # readlines will read into the whole line and put into list format
    # has \n at the end of each line
    data = fh.readlines()
#print(len(data))
for i in range(len(data)):
    group = data[i].rstrip("\n").split("\t")
    teamb.append(group)
      
output = ""    
seperator = "-"*10 + "&lt;br /&gt;"       #分隔線
  
for i in teamb[0:]:
    team = i[0]                              #小組 組長 其他六個組員
    leader = stu2b(i[1])
    m1 = stu2b(i[3])
    m2 = stu2b(i[5])
    m3 = stu2b(i[7])
    m4 = stu2b(i[9])
    m5 = stu2b(i[11])
    m6 = stu2b(i[13])
      
    try:
        m7 = stu2b(i[15])               #第七個組員
    except:
        m7 = ""
    try:
        m8 = stu2b(i[17])               #第八個組員
    except:
        m8 = ""
          
    leaderrepo = "&lt;a href='http://github.com/" + leader + "/cd2021'&gt;" + leader + " repo&lt;/a&gt;"        #組長以及組員的倉儲和網站
    leadersite = "&lt;a href='http://" + leader + ".github.io/cd2021'&gt;" + leader +  " site&lt;/a&gt;"
    m1repo = "&lt;a href='http://github.com/" + m1 + "/cd2021'&gt;" + m1 + " repo&lt;/a&gt;"
    m1site = "&lt;a href='http://" + m1 + ".github.io/cd2021'&gt;" + m1 +  " site&lt;/a&gt;"
    m2repo = "&lt;a href='http://github.com/" + m2 + "/cd2021'&gt;" + m2 + " repo&lt;/a&gt;"
    m2site = "&lt;a href='http://" + m2 + ".github.io/cd2021'&gt;" + m2 +  " site&lt;/a&gt;"
    m3repo = "&lt;a href='http://github.com/" + m3 + "/cd2021'&gt;" + m3 + " repo&lt;/a&gt;"
    m3site = "&lt;a href='http://" + m3 + ".github.io/cd2021'&gt;" + m3 +  " site&lt;/a&gt;"
    m4repo = "&lt;a href='http://github.com/" + m4 + "/cd2021'&gt;" + m4 + " repo&lt;/a&gt;"
    m4site = "&lt;a href='http://" + m4 + ".github.io/cd2021'&gt;" + m4 +  " site&lt;/a&gt;"
    m5repo = "&lt;a href='http://github.com/" + m5 + "/cd2021'&gt;" + m5 + " repo&lt;/a&gt;"
    m5site = "&lt;a href='http://" + m5 + ".github.io/cd2021'&gt;" + m5 +  " site&lt;/a&gt;"
    m6repo = "&lt;a href='http://github.com/" + m6 + "/cd2021'&gt;" + m6 + " repo&lt;/a&gt;"
    m6site = "&lt;a href='http://" + m6 + ".github.io/cd2021'&gt;" + m6 +  " site&lt;/a&gt;"
   
  
    teamrepo = "&lt;a href='http://github.com/" + leader + "/" + team + "'&gt;" + team + " repo&lt;/a&gt;"      #小組的倉儲含網站
    teamsite =  "&lt;a href='http://" + m1 + ".github.io/" + team + "'&gt;" + team +  " site&lt;/a&gt;"
  
    output += teamrepo + " | " + teamsite + " | " +leaderrepo + " | " + leadersite + " | " +m1repo + " | " + m1site + " | " +m2repo + " | " + m2site + " | " +m3repo + " | " + m3site + " | " +m4repo + " | " + m4site + " | " +m5repo + " | " + m5site + " | " +m6repo + " | " + m6site 
      
    if m7 != "":
       m7repo = "&lt;a href='http://github.com/" + m7 + "/cd2021'&gt;" + m7 + " repo&lt;/a&gt;"                     #如果有第七個組員會再加倉儲和網站沒有的話就空白
       m7site = "&lt;a href='http://" + m7 + ".github.io/cd2021'&gt;" + m7 +  " site&lt;/a&gt;"   
       output += " |  " + m7repo + "| " + m7site
    else:
        output += "" 
      
    if m8 != "":
       m8repo = "&lt;a href='http://github.com/" + m8 + "/cd2021'&gt;" + m8 + " repo&lt;/a&gt;"                     #如果有第八個組員會再加倉儲和網站沒有的話就空白最後加分隔線
       m8site = "&lt;a href='http://" + m8 + ".github.io/cd2021'&gt;" + m8 +  " site&lt;/a&gt;"   
       output += " |  " + m8repo + "| " + m8site 
    else:
        output += "" 
  
  
print(output)
# the following will use group data to generate needed html</pre>
<p></p>
<p><a href="http://github.com/40823245/stage3-bg1">stage3-bg1 repo</a> | <a href="http://40823251.github.io/stage3-bg1">stage3-bg1 site</a> | <a href="http://github.com/40823245/cd2021">40823245 repo</a> | <a href="http://40823245.github.io/cd2021">40823245 site</a> | <a href="http://github.com/40823251/cd2021">40823251 repo</a> | <a href="http://40823251.github.io/cd2021">40823251 site</a> | <a href="http://github.com/40823208/cd2021">40823208 repo</a> | <a href="http://40823208.github.io/cd2021">40823208 site</a> | <a href="http://github.com/40823213/cd2021">40823213 repo</a> | <a href="http://40823213.github.io/cd2021">40823213 site</a> | <a href="http://github.com/40823232/cd2021">40823232 repo</a> | <a href="http://40823232.github.io/cd2021">40823232 site</a> | <a href="http://github.com/40823234/cd2021">40823234 repo</a> | <a href="http://40823234.github.io/cd2021">40823234 site</a> | <a href="http://github.com/40823235/cd2021">40823235 repo</a> | <a href="http://40823235.github.io/cd2021">40823235 site</a> | <a href="http://github.com/40823246/cd2021">40823246 repo</a>| <a href="http://40823246.github.io/cd2021">40823246 site</a><br/>----------<br/><a href="http://github.com/40823217/stage3-bg2">stage3-bg2 repo</a> | <a href="http://40823201.github.io/stage3-bg2">stage3-bg2 site</a> | <a href="http://github.com/40823217/cd2021">40823217 repo</a> | <a href="http://40823217.github.io/cd2021">40823217 site</a> | <a href="http://github.com/40823201/cd2021">40823201 repo</a> | <a href="http://40823201.github.io/cd2021">40823201 site</a> | <a href="http://github.com/40823209/cd2021">40823209 repo</a> | <a href="http://40823209.github.io/cd2021">40823209 site</a> | <a href="http://github.com/40823210/cd2021">40823210 repo</a> | <a href="http://40823210.github.io/cd2021">40823210 site</a> | <a href="http://github.com/40823206/cd2021">40823206 repo</a> | <a href="http://40823206.github.io/cd2021">40823206 site</a> | <a href="http://github.com/40823207/cd2021">40823207 repo</a> | <a href="http://40823207.github.io/cd2021">40823207 site</a> | <a href="http://github.com/40823223/cd2021">40823223 repo</a> | <a href="http://40823223.github.io/cd2021">40823223 site</a> | <a href="http://github.com/40823224/cd2021">40823224 repo</a>| <a href="http://40823224.github.io/cd2021">40823224 site</a><br/>----------<br/><a href="http://github.com/40823236/stage3-bg3">stage3-bg3 repo</a> | <a href="http://40823202.github.io/stage3-bg3">stage3-bg3 site</a> | <a href="http://github.com/40823236/cd2021">40823236 repo</a> | <a href="http://40823236.github.io/cd2021">40823236 site</a> | <a href="http://github.com/40823202/cd2021">40823202 repo</a> | <a href="http://40823202.github.io/cd2021">40823202 site</a> | <a href="http://github.com/40823203/cd2021">40823203 repo</a> | <a href="http://40823203.github.io/cd2021">40823203 site</a> | <a href="http://github.com/40823212/cd2021">40823212 repo</a> | <a href="http://40823212.github.io/cd2021">40823212 site</a> | <a href="http://github.com/40823219/cd2021">40823219 repo</a> | <a href="http://40823219.github.io/cd2021">40823219 site</a> | <a href="http://github.com/40823222/cd2021">40823222 repo</a> | <a href="http://40823222.github.io/cd2021">40823222 site</a> | <a href="http://github.com/40823231-2/cd2021">40823231-2 repo</a> | <a href="http://40823231-2.github.io/cd2021">40823231-2 site</a> | <a href="http://github.com/40823244/cd2021">40823244 repo</a>| <a href="http://40823244.github.io/cd2021">40823244 site</a><br/>----------<br/><a href="http://github.com/40823239/stage3-bg4">stage3-bg4 repo</a> | <a href="http://s40723140.github.io/stage3-bg4">stage3-bg4 site</a> | <a href="http://github.com/40823239/cd2021">40823239 repo</a> | <a href="http://40823239.github.io/cd2021">40823239 site</a> | <a href="http://github.com/s40723140/cd2021">s40723140 repo</a> | <a href="http://s40723140.github.io/cd2021">s40723140 site</a> | <a href="http://github.com/s40723128/cd2021">s40723128 repo</a> | <a href="http://s40723128.github.io/cd2021">s40723128 site</a> | <a href="http://github.com/s40723139/cd2021">s40723139 repo</a> | <a href="http://s40723139.github.io/cd2021">s40723139 site</a> | <a href="http://github.com/s40723106/cd2021">s40723106 repo</a> | <a href="http://s40723106.github.io/cd2021">s40723106 site</a> | <a href="http://github.com/s40723135/cd2021">s40723135 repo</a> | <a href="http://s40723135.github.io/cd2021">s40723135 site</a> | <a href="http://github.com/s40723143/cd2021">s40723143 repo</a> | <a href="http://s40723143.github.io/cd2021">s40723143 site</a> | <a href="http://github.com/s40723215/cd2021">s40723215 repo</a>| <a href="http://s40723215.github.io/cd2021">s40723215 site</a><br/>----------<br/><a href="http://github.com/40823221/stage3-bg5">stage3-bg5 repo</a> | <a href="http://40823204.github.io/stage3-bg5">stage3-bg5 site</a> | <a href="http://github.com/40823221/cd2021">40823221 repo</a> | <a href="http://40823221.github.io/cd2021">40823221 site</a> | <a href="http://github.com/40823204/cd2021">40823204 repo</a> | <a href="http://40823204.github.io/cd2021">40823204 site</a> | <a href="http://github.com/40823205/cd2021">40823205 repo</a> | <a href="http://40823205.github.io/cd2021">40823205 site</a> | <a href="http://github.com/40823220/cd2021">40823220 repo</a> | <a href="http://40823220.github.io/cd2021">40823220 site</a> | <a href="http://github.com/40823228/cd2021">40823228 repo</a> | <a href="http://40823228.github.io/cd2021">40823228 site</a> | <a href="http://github.com/40823237/cd2021">40823237 repo</a> | <a href="http://40823237.github.io/cd2021">40823237 site</a> | <a href="http://github.com/40823242/cd2021">40823242 repo</a> | <a href="http://40823242.github.io/cd2021">40823242 site</a> | <a href="http://github.com/40823250/cd2021">40823250 repo</a>| <a href="http://40823250.github.io/cd2021">40823250 site</a> | <a href="http://github.com/40832244/cd2021">40832244 repo</a>| <a href="http://40832244.github.io/cd2021">40832244 site</a><br/>----------<br/><a href="http://github.com/40823225/stage3-bg6">stage3-bg6 repo</a> | <a href="http://40823214.github.io/stage3-bg6">stage3-bg6 site</a> | <a href="http://github.com/40823225/cd2021">40823225 repo</a> | <a href="http://40823225.github.io/cd2021">40823225 site</a> | <a href="http://github.com/40823214/cd2021">40823214 repo</a> | <a href="http://40823214.github.io/cd2021">40823214 site</a> | <a href="http://github.com/40823218/cd2021">40823218 repo</a> | <a href="http://40823218.github.io/cd2021">40823218 site</a> | <a href="http://github.com/40823211/cd2021">40823211 repo</a> | <a href="http://40823211.github.io/cd2021">40823211 site</a> | <a href="http://github.com/40823248/cd2021">40823248 repo</a> | <a href="http://40823248.github.io/cd2021">40823248 site</a> | <a href="http://github.com/40823247/cd2021">40823247 repo</a> | <a href="http://40823247.github.io/cd2021">40823247 site</a> | <a href="http://github.com/40823216/cd2021">40823216 repo</a> | <a href="http://40823216.github.io/cd2021">40823216 site</a> | <a href="http://github.com/40823238/cd2021">40823238 repo</a>| <a href="http://40823238.github.io/cd2021">40823238 site</a><br/>----------<br/><a href="http://github.com/40623144/stage3-bg7">stage3-bg7 repo</a> | <a href="http://40823233.github.io/stage3-bg7">stage3-bg7 site</a> | <a href="http://github.com/40623144/cd2021">40623144 repo</a> | <a href="http://40623144.github.io/cd2021">40623144 site</a> | <a href="http://github.com/40823233/cd2021">40823233 repo</a> | <a href="http://40823233.github.io/cd2021">40823233 site</a> | <a href="http://github.com/s40723224/cd2021">s40723224 repo</a> | <a href="http://s40723224.github.io/cd2021">s40723224 site</a> | <a href="http://github.com/40823241/cd2021">40823241 repo</a> | <a href="http://40823241.github.io/cd2021">40823241 site</a> | <a href="http://github.com/40423155/cd2021">40423155 repo</a> | <a href="http://40423155.github.io/cd2021">40423155 site</a> | <a href="http://github.com/40823227/cd2021">40823227 repo</a> | <a href="http://40823227.github.io/cd2021">40823227 site</a> | <a href="http://github.com/s40723233/cd2021">s40723233 repo</a> | <a href="http://s40723233.github.io/cd2021">s40723233 site</a><br/>----------</p>
<h2>task2</h2>
<h3>掃地機器人</h3>
<p><strong>測試組員:40823245</strong></p>
<p><strong>第一版     日期:2021/05/05</strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/QHVSKg0OuRg" width="500"></iframe></strong></p>
<p><strong>說明:先利用簡單的機構去測試是否遷入成功及程式是否可執行。</strong></p>
<p><strong>第二版</strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/uOUmFJpRCbM" width="500"></iframe></strong></p>
<p><strong>注意:本次影片測試速度設定為0故在原地不動。<br/>問題:出現不正常運動軌跡、異常抖動情況。</strong></p>
<p><strong>第三版     日期:2021/05/06</strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/pa2Ds_MFtNs" width="500"></iframe></strong></p>
<p><strong>說明:將原本機構簡化判斷是否為機構圖之問題。</strong></p>
<h3>分球機</h3>
<p><strong>測試人員:40823208     日期:2021/05/04</strong></p>
<p><strong> 第一版</strong></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/uPxCMuzhyxU" width="500"></iframe></span></p>
<h3>task2 夾爪機構</h3>
<p><strong>測試人員:40823234     日期:2021/05/05</strong></p>
<p><strong> 第一版</strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/_oqcnraep2s" width="500"></iframe></strong></p>
<p><strong>第一版程式:</strong></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import sim as vrep
import math
import random
import time
 
print ('Start')
 
# Close eventual old connections
vrep.simxFinish(-1)
# Connect to V-REP remote server
clientID = vrep.simxStart('192.168.1.114', 19997, True, True, 5000, 5)

if clientID !=-1:
    print ('Connected to remote API server')
 
    res = vrep.simxAddStatusbarMessage(
        clientID, "40823234",
        vrep.simx_opmode_oneshot)
        
    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):
        print("Could not add a message to the status bar.")
        
    opmode = vrep.simx_opmode_oneshot_wait
    vrep.simxStartSimulation(clientID, opmode)
    ret, wristHandle = vrep.simxGetObjectHandle(clientID, "VerticalJoint",opmode)
    vrep.simxSetJointTargetVelocity(clientID,wristHandle,1,opmode)
    ret, wristHandle = vrep.simxGetObjectHandle(clientID, "SpiritJoint",opmode)
    vrep.simxSetJointTargetVelocity(clientID,wristHandle,1,opmode)
    ret, wristHandle = vrep.simxGetObjectHandle(clientID, "joint",opmode)
    vrep.simxSetJointTargetVelocity(clientID,wristHandle,1,opmode)
else:
    print ('Failed connecting to  remote API server')
print ('End')</pre>
<p><strong>測試人員:40823234     日期:2021/05/10</strong></p>
<p><strong>第二版 使用python keyboard</strong></p>
<p>檔案下載:<a href="/downloads/REMOTE API.zip">REMOTE API.zip</a></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/qUfPGBOkqMo" width="500"></iframe></strong></p>
<p><strong>使用keyboard程式:</strong></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import sim as vrep
import math
import random
import time
import keyboard
 
print ('Start')
 
# Close eventual old connections
vrep.simxFinish(-1)
# Connect to V-REP remote server
clientID = vrep.simxStart('192.168.1.114', 19997, True, True, 5000, 5)

if clientID !=-1:
    print ('Connected to remote API server')
 
    res = vrep.simxAddStatusbarMessage(
        clientID, "40823234",
        vrep.simx_opmode_oneshot)
        
    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):
        print("Could not add a message to the status bar.")
        
    opmode = vrep.simx_opmode_oneshot_wait
    vrep.simxStartSimulation(clientID, opmode)
    ret,vertical_handle=vrep.simxGetObjectHandle(clientID,"VerticalJoint",opmode)#設定軸對應名稱
    ret,spirit_handle=vrep.simxGetObjectHandle(clientID,"SpiritJoint",opmode)
    ret,cam_handle=vrep.simxGetObjectHandle(clientID,"joint",opmode)
    while True:
        #keyboard "w" 前進
     if keyboard.is_pressed("w"):
            print("You pressed w")
          
            vrep.simxSetJointTargetVelocity(clientID,vertical_handle,0.1,opmode)
     if keyboard.is_pressed("s"):#keyboard "s" 後退
            print("You pressed s")
          
            vrep.simxSetJointTargetVelocity(clientID,vertical_handle,-0.1,opmode)
     if keyboard.is_pressed("a"):#keyboard "a"向左 
            print("You pressed a")
          
            vrep.simxSetJointTargetVelocity(clientID,spirit_handle,0.1,opmode)
     if keyboard.is_pressed("d"):#keyboard "d" 向右
            print("You pressed d")
          
            vrep.simxSetJointTargetVelocity(clientID,spirit_handle,-0.1,opmode)
     if keyboard.is_pressed("q"):#keyboard "q" 前進後退停止
            print("You pressed q")
          
            vrep.simxSetJointTargetVelocity(clientID,vertical_handle,0,opmode)
     if keyboard.is_pressed("e"):#keyboard "e" 左右停止
            print("You pressed e")
          
            vrep.simxSetJointTargetVelocity(clientID,spirit_handle,0,opmode) 
     if keyboard.is_pressed("r"):#keyboard "r" 凸輪轉動
            print("You pressed r")
          
            vrep.simxSetJointTargetVelocity(clientID,cam_handle,1,opmode)   
     if keyboard.is_pressed("f"):#keyboard "f" 凸輪停止
            print("You pressed f")
          
            vrep.simxSetJointTargetVelocity(clientID,cam_handle,0,opmode)        
else:
    print ('Failed connecting to  remote API server')
print ('End')</pre><h1>W15</h1>
<p>影片字幕整理</p>
<p>原影片:幾何法</p>
<p><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/IKOGwoJ2HLk" width="500"></iframe></p>
<p>中文字幕版:<span>幾何法</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/DLenLXDvIAY" width="500"></iframe></p>
<p>原影片:代數法</p>
<p><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/eIZuz1XCd0w" width="500"></iframe></p>
<p>中文字幕版:<span>代數法</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/NUfkfZK_nkc" width="500"></iframe></p>
<h1>w16</h1>
<p><span>W16_exam 壓縮檔下載:<a href="/downloads/W16_exam.7z">W16_exam.7z</a></span></p>
<p>Onshape 零件繪製</p>
<p>Onshape連結<a href="https://cad.onshape.com/documents/54ba2064aa192862e166a450/w/eabdbc707e030efccdde3883/e/8ad494a807c3d1613913ac39">https://cad.onshape.com/documents/54ba2064aa192862e166a450/w/eabdbc707e030efccdde3883/e/8ad494a807c3d1613913ac39</a></p>
<p><span>Onshape零件和場景設定 零件下載:<a href="/downloads/MTB_ROBOT.stl">MTB_ROBOT.stl</a></span></p>
<p><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/em8Vtehdus8" width="500"></iframe></p>
<p><span>MTB_Robot加入吸盤和鍵盤控制方塊取放 檔案下載:<a href="/downloads/鍵盤控制.7z">鍵盤控制.7z</a></span></p>
<p><span>鍵盤控制ascii碼對應表:<a href="https://tool.oschina.net/commons?type=4">https://tool.oschina.net/commons?type=4</a></span></p>
<p><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/TZvoD196j5o" width="500"></iframe></p>
<p><span>迴圈方塊取放和Python remote API 檔案下載:<a href="/downloads/迴圈和PYTHON.7z">迴圈和PYTHON.7z</a></span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/mPjhXKoKVSk" width="500"></iframe></span></p>
<p><span>迴圈執行程式碼:</span></p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false"></pre>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function moving(x,y)--[moving (x,y)為角度計算利用求出面積來得到所需邊長在使用三角函數求所需角度]--
    a=0.47
    b=0.4
    c=math.pow((math.pow(x,2)+math.pow(y,2)),0.5)
    s=(a+b+c)/2
    area=math.pow((s*(s-a)*(s-b)*(s-c)),0.5)
    h=2*area/c
    deg1_base=math.atan(x/y)
    if x&lt;0 and y&lt;0 then
        deg1_base=deg1_base+math.pi
    end
    deg1_tri=math.asin(h/a)
    deg1=deg1_base+deg1_tri
    deg2=math.pi-(0.5*math.pi-deg1_tri)-math.acos(h/b)
    deg3=deg2-deg1
    sim.setJointTargetPosition(joint01,deg1)
    sim.setJointTargetPosition(joint02,-deg2)
    sim.setJointTargetPosition(joint03,deg3)
end
function sysCall_threadmain()
    joint01=sim.getObjectHandle('MTB_axis1')--[設定名稱對應v-rep的軸]--
    joint02=sim.getObjectHandle('MTB_axis2')
    joint03=sim.getObjectHandle('MTB_axis3')
    jointz=sim.getObjectHandle('MTB_axis4')
    sim.setJointTargetPosition(joint01,0)--將軸的位置歸零
    sim.setJointTargetPosition(joint02,0)
    sim.setJointTargetPosition(joint03,0)
    sim.setJointTargetPosition(jointz,0)
    sim.setIntegerSignal("pad_switch",1)--吸盤1實為開啟0為關閉
    sim.setJointTargetPosition(jointz,-0.07)--吸盤向下0.07
    sim.wait(5)
    sim.setJointTargetPosition(jointz,0)
    while sim.getSimulationState()~=sim.simulation_advancing_abouttostopre do--迴圈執行以下動作while後為執行條件
    moving(0.2,0.7)--將x=0.2y=0.7帶入moving副函式
    sim.wait(5)--等待5秒
    sim.setIntegerSignal("pad_switch",0)
    print(0.2,0.7,0.05)
    sim.wait(5)
    sim.setIntegerSignal("pad_switch",1)
    sim.setJointTargetPosition(jointz,-0.07)
    sim.wait(5)
    sim.setJointTargetPosition(jointz,0)
    sim.wait(5)
    moving(-0.3,-0.55)
    sim.wait(2)
    sim.setIntegerSignal("pad_switch",0)
    print(-0.3,-0.55,0.05)
    sim.wait(5)
    sim.setIntegerSignal("pad_switch",1)
    sim.setJointTargetPosition(jointz,-0.07)
    sim.wait(5)
    sim.setJointTargetPosition(jointz,0)
    sim.wait(5)
    end

end
</pre>
<p>python程式碼:<br/><br/></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import sim as vrep
import math
import random
import time
import math

def moving(x,y):
        a=0.47 #運算角度副程式
        b=0.4
        c=math.pow((math.pow(x,2)+math.pow(y,2)),0.5)
        s=(a+b+c)/2
        area=math.pow((s*(s-a)*(s-b)*(s-c)),0.5)
        h=2*area/c
        deg1_base=math.atan(x/y)
        if x&lt;0 and y&lt;0 :
            deg1_base=deg1_base+math.pi
        deg1_tri=math.asin(h/a)
        deg1=deg1_base+deg1_tri
        deg2=math.pi-(0.5*math.pi-deg1_tri)-math.acos(h/b)
        deg3=deg2-deg1
        vrep.simxSetJointTargetPosition(clientID,joint01,deg1,opmode)#設定deg對應的軸
        vrep.simxSetJointTargetPosition(clientID,joint02,-deg2,opmode)
        vrep.simxSetJointTargetPosition(clientID,joint03,deg3,opmode)

print ('Start')
 
vrep.simxFinish(-1)
 
clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)

if clientID != -1:
    print ('Connected to remote API server')

    res = vrep.simxAddStatusbarMessage(
        clientID, "40823234",
        vrep.simx_opmode_oneshot)
    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):
        print("Could not add a message to the status bar.")


    opmode = vrep.simx_opmode_oneshot_wait
    STREAMING = vrep.simx_opmode_streaming


    vrep.simxStartSimulation(clientID, opmode)
    ret,joint01=vrep.simxGetObjectHandle(clientID,"MTB_axis1",opmode)#設定對應軸名稱
    ret,joint02=vrep.simxGetObjectHandle(clientID,"MTB_axis2",opmode)
    ret,joint03=vrep.simxGetObjectHandle(clientID,"MTB_axis3",opmode)
    ret,joint04=vrep.simxGetObjectHandle(clientID,"MTB_axis4",opmode)
    
    vrep.simxSetJointTargetPosition(clientID,joint01,0,opmode)#軸位置歸零
    vrep.simxSetJointTargetPosition(clientID,joint02,0,opmode)
    vrep.simxSetJointTargetPosition(clientID,joint03,0,opmode)
    vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)#吸盤開啟=1 關閉=0
    vrep.simxSetJointTargetPosition(clientID,joint04,-0.07,opmode)
    time.sleep(1)
    vrep.simxSetJointTargetPosition(clientID,joint04,0,opmode)
while True:#迴圈執行直到break it
    moving(0.2,0.7)#0.2 0.7副程式運算
    time.sleep(1)#停一秒
    vrep.simxSetIntegerSignal(clientID,"pad_switch",0,opmode)
    time.sleep(1)
    vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)
    vrep.simxSetJointTargetPosition(clientID,joint04,-0.07,opmode)
    time.sleep(1)
    vrep.simxSetJointTargetPosition(clientID,joint04,0,opmode)
    time.sleep(1)
    moving(-0.3,-0.55)
    time.sleep(1)
    vrep.simxSetIntegerSignal(clientID,"pad_switch",0,opmode)
    time.sleep(1)
    vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)
    vrep.simxSetJointTargetPosition(clientID,joint04,-0.07,opmode)
    time.sleep(1)
    vrep.simxSetJointTargetPosition(clientID,joint04,0,opmode)
    time.sleep(1)
</pre>
<p>40823214 教學紀錄影片:</p>
<p><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/GUUKSgN93eI" width="500"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/gZd9KlVS9BI" width="500"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/Zu_0BvZfxgQ" width="500"></iframe></p>